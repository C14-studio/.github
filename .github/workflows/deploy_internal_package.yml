name: Deploy Internal Package

# on:
#   push:
#     tags:
#       - "v*.*.*"
#   workflow_dispatch:
#   workflow_call:
#     inputs:
#         python-version:
#             description: 'Python version to use'
#             required: false
#             type: string
#             default: '3.11'
#         additional-steps:
#             description: 'Additional steps to run'
#             required: false
#             type: string
#             default: ''

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bump2version

      - name: Get version type
        id: version
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          echo "::set-output name=version::$VERSION"
          if [[ "$VERSION" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "::set-output name=version_type::patch"
          elif [[ "$VERSION" =~ ^v[0-9]+\.[0-9]+$ ]]; then
            echo "::set-output name=version_type::minor"
          elif [[ "$VERSION" =~ ^v[0-9]+$ ]]; then
            echo "::set-output name=version_type::major"
          fi

      - name: Bump version
        if: steps.version.outputs.version_type != 'major'
        run: |
          bump2version patch

      - name: Build Python package
        run: |
          python setup.py sdist bdist_wheel

      - name: Deploy package
        if: steps.version.outputs.version_type != 'major' || github.event_name == 'workflow_dispatch'
        env:
          REPO_NAME: ${{ github.event.repository.name }}
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          mkdir "Z:\.pipeline\packages\int\%REPO_NAME%\%VERSION%"
          copy dist\* "Z:\.pipeline\packages\int\%REPO_NAME%\%VERSION%\"
        shell: cmd